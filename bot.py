import asyncio
import logging
import os
import sys
import pprint # –î–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞

from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

# --- –ù–ê–°–¢–†–û–ô–ö–ê ---
BOT_TOKEN = os.getenv('BOT_TOKEN')
WEB_APP_URL = os.getenv('WEB_APP_URL')
# -----------------

logging.basicConfig(level=logging.INFO)

# --- –ë–õ–û–ö –î–õ–Ø –û–¢–õ–ê–î–ö–ò ---
# –í—ã–≤–æ–¥–∏–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–∏—Ç –±–æ—Ç
logging.info("--- –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø, –ö–û–¢–û–†–´–ï –í–ò–î–ò–¢ –ë–û–¢ ---")
logging.info(pprint.pformat(dict(os.environ)))
logging.info("---------------------------------------------")
# -------------------------

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not BOT_TOKEN:
    logging.critical("!!! –û–®–ò–ë–ö–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
    sys.exit(1)

if not WEB_APP_URL:
    logging.critical("!!! –û–®–ò–ë–ö–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è WEB_APP_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
    sys.exit(1)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    try:
        web_app_button = InlineKeyboardButton(
            text="‚ú® –ü–æ–¥–æ–±—Ä–∞—Ç—å –ø—Ä–∏—á–µ—Å–∫—É",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[web_app_button]])
        welcome_text = (
            f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! üëã\n\n"
            "–Ø ‚Äî –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AI-—Å—Ç–∏–ª–∏—Å—Ç. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º –ø—Ä–∏–º–µ—Ä–∏—Ç—å –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑!\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å! üëá"
        )
        await message.answer(welcome_text, reply_markup=keyboard)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def main():
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        await dp.start_polling(bot)
    except Exception as e:
        logging.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main())
